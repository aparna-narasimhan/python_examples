'''
Given an access log for a feature, return the customer ids of repeat customers
who have visited on 3 or more consecutive days. Each line of the access log has
two fields: the timestamp of when the customer visited, and the customer id (a
string). The feature writes an entry to the log as it gets the hits. Below is
an example log.
08-Jun-2012 1:00 AM    4ABCDEFGHI
09-Jun-2012 1:00 AM    1ABCDEFGHI
09-Jun-2012 9:23 AM    3ABCDEFGHI
10-Jun-2012 1:00 AM    2ABCDEFGHI
10-Jun-2012 2:03 AM    2ABCDEFGHI
10-Jun-2012 1:00 AM    1ABCDEFGHI
10-Jun-2012 7:23 AM    3ABCDEFGHI
10-Jun-2012 9:23 AM    3ABCDEFGHI
11-Jun-2012 1:00 AM    1ABCDEFGHI
11-Jun-2012 2:12 AM    2ABCDEFGHI
11-Jun-2012 8:23 AM    3ABCDEFGHI
12-Jun-2012 10:21 PM   1ABCDEFGHI

In this example, the 3-consecutive-day repeat customers are "1ABCDEFGHI" and
"3ABCDEFGHI". The result that your program generates will be these two customer
ids.
'''

Solution: Create defaultdict(list) and store key as cust_id and append values as the dates visited(probably a set or dont append if date already exists)
Filter out dict values list count less than 3
In the flitered values, extract year,month,date using slicing and check if dates differ by 1 provided months and years are same
Increment count each time it passes this check, when count reaches 3, add cust id to result list.
Repeat for all customers in the filtered list and return the result list!